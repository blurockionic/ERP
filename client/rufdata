                <div className="p-4">
                  <span className="bg-gray-200 w-auto px-5 py-1">
                    Catering Order
                  </span>

                  <div className="px-6 ">
                    {/* breakFast button */}
                    <div className="bg-white shadow-sm">
                      <button
                        className="border-b font-bold text-xl text-slate-800  hover:border-gray-50 py-2 px-4  w-full flex justify-between mt-4 "
                        onClick={() => setBreakfastMenuOpen(!breakfastMenuOpen)}
                      >
                        {/* Toggle lunchMenuOpen state */}
                        <span className="text-center font-normal">
                          Breakfast
                        </span>
                        <span>
                          {breakfastMenuOpen === true ? (
                            <ExpandLessIcon />
                          ) : (
                            <ExpandMoreIcon />
                          )}
                        </span>
                      </button>
                      {breakfastMenuOpen && (
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 p-1 md:p-3 lg:p-3">
                          {/* Total Pax Count */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="total count"
                              className="font-normal mb-1"
                            >
                              Total Pax Count
                            </label>
                            <input
                              className="w-full p-[6px] border border-gray-300 outline-none rounded"
                              type="text"
                              value={bfTotalPacCount}
                              onChange={(e) =>
                                setBfTotalPacCount(e.target.value)
                              }
                              placeholder="Enter the count of PAX"
                            />
                          </div>

                          {/* Snacks select div */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="mainCourse"
                              className="font-normal mb-1"
                            >
                              Main Course
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={mainCourseOptions}
                              isMulti
                              value={selectedSnacksOptions}
                              onChange={handleSnacksSelect}
                              className="w-full"
                            />
                          </div>

                          {/* Main Course Items */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="brunch"
                              className="font-normal mb-1"
                            >
                              Brunch
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={brunchOtions}
                              isMulti
                              value={breakfastMainCourseOptions}
                              onChange={handleBreakFastMainCourseSelect}
                              className="w-full"
                            />
                          </div>

                          {/* Soup and Salads */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="soupAndSalad"
                              className="font-normal mb-1"
                            >
                              Soups & Salads
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={soupAndSaladOptions}
                              isMulti
                              value={selectedSoupsAndSaladOptions}
                              onChange={handleSoupAndSalad}
                              className="w-full"
                            />
                          </div>
                        </div>
                      )}
                    </div>

                    {/* Lunch button */}
                    <div className="bg-white shadow-sm">
                      <button
                        className="border-b font-bold text-xl text-slate-800  hover:border-gray-50 py-2 px-4  w-full flex justify-between mt-4 "
                        onClick={() => setLunchMenuOpen(!lunchMenuOpen)}
                      >
                        {/* Toggle lunchMenuOpen state */}
                        <span className="font-normal">Lunch</span>
                        <span>
                          {lunchMenuOpen === true ? (
                            <ExpandLessIcon />
                          ) : (
                            <ExpandMoreIcon />
                          )}
                        </span>
                      </button>
                      {lunchMenuOpen && (
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 p-1 md:p-3 lg:p-3">
                          {/* Total Pax Count */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="total count"
                              className="font-normal mb-1"
                            >
                              Total Pax Count
                            </label>
                            <input
                              value={lunchTotalPackCount}
                              onChange={(e) =>
                                setLunchTotalPackCount(e.target.value)
                              }
                              className="w-full p-[6px] border border-gray-300 outline-none rounded"
                              type="text"
                              placeholder="Enter the count of PAX"
                            />
                          </div>

                          {/* Lunch Timing */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="lunchTime"
                              className="font-normal mb-1"
                            >
                              Lunch Time
                            </label>
                            <input
                              value={lunchTime}
                              onChange={(e) => setLunchTime(e.target.value)}
                              className="w-full p-[5px] border border-gray-300 outline-none rounded"
                              type="time"
                              placeholder="Enter the count of PAX"
                            />
                          </div>

                          {/* Starter */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="starter"
                              className="font-normal mb-1"
                            >
                              Starter
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={starterOptions}
                              isMulti
                              value={selectedLunchSnacksOptions}
                              onChange={handleLunchSnacksSelect}
                              className="w-full"
                            />
                          </div>

                          {/* Main Course */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="mainCourse"
                              className="font-normal mb-1"
                            >
                              Main Course
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={mainCourseOptions}
                              isMulti
                              value={selectedMainCourseOptions}
                              onChange={handleMainCourseSelect}
                              className="w-full"
                            />
                          </div>

                          {/* Soups & Salads */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="soupsAndSalads"
                              className="font-normal mb-1"
                            >
                              Soups & Salads
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={soupAndSaladOptions}
                              isMulti
                              value={selectedLunchSoupsOptions}
                              onChange={handleLunchSoupsSelect}
                              className="w-full"
                            />
                          </div>

                          {/* Dessert */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="dessert"
                              className="font-normal mb-1"
                            >
                              Dessert
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={dessertOptions}
                              isMulti
                              value={breakfastIceCreamOptions}
                              onChange={handleLunchIceCreamChange}
                              className="w-full"
                            />
                          </div>
                        </div>
                      )}
                    </div>

                    {/* Dinner button */}
                    <div className="bg-white shadow-sm">
                      <button
                        className="border-b font-bold text-xl text-slate-800  hover:border-gray-50 py-2 px-4  w-full flex justify-between mt-4 "
                        onClick={() => setDinnerMenuOpen(!dinnerMenuOpen)}
                      >
                        {/* Toggle dinnerMenuOpen state */}
                        <span className="font-normal">Dinner</span>
                        <span>
                          {dinnerMenuOpen === true ? (
                            <ExpandLessIcon />
                          ) : (
                            <ExpandMoreIcon />
                          )}
                        </span>
                      </button>
                      {dinnerMenuOpen && (
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 p-1 md:p-3 lg:p-3">
                          {/* Total Pax Count */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="totalCount"
                              className="font-normal mb-1"
                            >
                              Total Pax Count
                            </label>
                            <input
                              value={dinnerTotalPackCount}
                              onChange={(e) =>
                                setDinnerTotalPackCount(e.target.value)
                              }
                              className="w-full p-2 border border-gray-300 outline-none rounded"
                              type="text"
                              placeholder="Enter the count of PAX"
                            />
                          </div>

                          {/* Dinner Timing */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="dinnerTime"
                              className="font-normal mb-1"
                            >
                              Dinner Time
                            </label>
                            <input
                              value={dinnerTime}
                              onChange={(e) => setDinnerTime(e.target.value)}
                              className="w-full p-2 border border-gray-300 outline-none rounded"
                              type="time"
                              placeholder="Enter the count of PAX"
                            />
                          </div>

                          {/* Starter */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="starter"
                              className="font-normal mb-1"
                            >
                              Starter
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={starterOptions}
                              isMulti
                              value={dinnerSnacksOptions}
                              onChange={handleDinnerSnacksSelect}
                              className="w-full"
                            />
                          </div>

                          {/* Main Course */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="mainCourse"
                              className="font-normal mb-1"
                            >
                              Main Course
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={mainCourseOptions}
                              isMulti
                              value={dinnerMainCourseOptions}
                              onChange={handleDinnerMainCourseSelect}
                              className="w-full"
                            />
                          </div>

                          {/* Soups & Salads */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="soupsAndSalads"
                              className="font-normal mb-1"
                            >
                              Soups & Salads
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={soupAndSaladOptions}
                              isMulti
                              value={dinnerSoupsOptions}
                              onChange={handleDinnerSoups}
                              className="w-full"
                            />
                          </div>

                          {/* Dessert */}
                          <div className="flex flex-col">
                            <label
                              htmlFor="dessert"
                              className="font-normal mb-1"
                            >
                              Dessert
                            </label>
                            <Select
                              styles={{
                                menu: (provided) => ({
                                  ...provided,
                                  maxHeight: "200px",
                                }),
                              }}
                              options={dessertOptions}
                              isMulti
                              value={dinnerIceCreamOptions}
                              onChange={handleDinnerIceCream}
                              className="w-full"
                            />
                          </div>
                        </div>
                      )}
                    </div>

                    {/* add other details */}

                    <div className="bg-white shadow-sm">
                      <button
                        className="border-b font-bold text-xl text-slate-800  hover:border-gray-50 py-2 px-4  w-full flex justify-between mt-4 "
                        onClick={() =>
                          setOtherDetailsMenuOpen(!otherDetailsMenuOpen)
                        }
                      >
                        {/* Toggle lunchMenuOpen state */}
                        <span className="text-center font-normal">
                          Other catering Items
                        </span>
                        <span>
                          {otherDetailsMenuOpen === true ? (
                            <ExpandLessIcon />
                          ) : (
                            <ExpandMoreIcon />
                          )}
                        </span>
                      </button>
                      {otherDetailsMenuOpen && (
                        <>
                          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 p-1 md:p-3 lg:p-3">
                            <div className="flex flex-col">
                              <label className="mb-1" htmlFor="relatedItemName">
                                Item Name
                              </label>
                              <Select
                                onChange={handleSelectChangeCatering}
                                options={optionCatering}
                                styles={customStyles}
                                className="w-full md:w-64 p-1 rounded focus:outline-none focus:ring focus:border-gray-500"
                              />
                            </div>

                            <div className="flex flex-col">
                              <label className="mb-1" htmlFor="itemCount">
                                Item Count {itemCountCatering}
                              </label>
                              <input
                                type="text"
                                id="itemCount"
                                value={itemCount}
                                onChange={(e) => setItemCount(e.target.value)}
                                className="capitalize border border-gray-300 rounded-md p-1 focus:outline-none focus:ring-1 focus:ring-slate-500"
                              />
                              {countError && (
                                <p className="text-red-500">{countError}</p>
                              )}
                            </div>

                            <div className="flex justify-end items-end">
                              <button
                                type="button"
                                onClick={addRelatedItem}
                                className="bg-slate-700 text-white font-semibold py-2 px-4 rounded-md shadow-md hover:bg-slate-800 focus:outline-none"
                              >
                                Add
                              </button>
                            </div>
                          </div>

                          <div className="col-span-3 mt-4">
                            <label className="mb-1" htmlFor="relatedItems">
                              Related Items
                            </label>
                            <div className="rounded-md p-0.5 flex flex-row flex-wrap">
                              {relatedItems?.length > 0 ? (
                                relatedItems.map((item, index) => (
                                  <div
                                    key={index}
                                    className="flex items-center border border-gray-400 rounded-md m-1 p-1"
                                  >
                                    <span className="ml-1 p-1.5 capitalize">
                                      {item.relatedItemsName} - (
                                      {item.relatedItemsCount})
                                    </span>
                                    <button
                                      type="button"
                                      onClick={() =>
                                        setRelatedItems(
                                          relatedItems.filter(
                                            (_, i) => i !== index
                                          )
                                        )
                                      }
                                      className="p-1 hover:bg-gray-200 rounded-full"
                                    >
                                      <Tooltip
                                        title="remove item"
                                        placement="bottom"
                                        arrow
                                      >
                                        <CloseIcon />
                                      </Tooltip>
                                    </button>
                                  </div>
                                ))
                              ) : (
                                <div className="w-full text-center p-6 bg-gray-100">
                                  No related items
                                </div>
                              )}
                            </div>
                          </div>
                        </>
                      )}
                    </div>
                  </div>
                </div>